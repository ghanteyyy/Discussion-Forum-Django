# Generated by Django 5.0.7 on 2025-10-03 11:27

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter topic name', max_length=200, verbose_name='Topic')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(help_text='Enter your name', max_length=200, null=True, verbose_name='Name')),
                ('email', models.EmailField(help_text='Enter your email', max_length=254, null=True, unique=True, verbose_name='Email')),
                ('bio', models.TextField(help_text='Short information about yourself', null=True, verbose_name='Biography')),
                ('avatar', models.ImageField(default='avatar.svg', help_text='Upload an avatar', null=True, upload_to='', verbose_name='Avatar')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the room name', max_length=200, verbose_name='Room name')),
                ('description', models.TextField(blank=True, help_text='Enter room description', null=True, verbose_name='Description')),
                ('updated', models.DateTimeField(auto_now=True, help_text='Last update time', verbose_name='Updated')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Room creation time', verbose_name='Created')),
                ('host', models.ForeignKey(help_text='Select the room host', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Host')),
                ('participants', models.ManyToManyField(blank=True, help_text='Select room participants', related_name='participants', to=settings.AUTH_USER_MODEL, verbose_name='Participants')),
                ('topic', models.ForeignKey(help_text='Select the topic for the room', null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.topic', verbose_name='Topic')),
            ],
            options={
                'verbose_name': 'Room',
                'verbose_name_plural': 'Rooms',
                'ordering': ['-updated', '-created'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(help_text='Message text', verbose_name='Message')),
                ('updated', models.DateTimeField(auto_now=True, help_text='Last update time', verbose_name='Updated')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Message creation time', verbose_name='Created')),
                ('user', models.ForeignKey(help_text='Message author', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('room', models.ForeignKey(help_text='Room where the message was sent', on_delete=django.db.models.deletion.CASCADE, to='base.room', verbose_name='Room')),
            ],
            options={
                'verbose_name': 'Message',
                'verbose_name_plural': 'Messages',
                'ordering': ['-updated', '-created'],
            },
        ),
    ]
